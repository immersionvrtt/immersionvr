rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null; }
    function role() { return isSignedIn() ? request.auth.token.role : "guest"; }
    function isAdmin() { return role() == "admin"; }
    function isStaff() { return ["admin","manager","employee"].hasAny([role()]); }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }

    // Users
    match /users/{uid} {
      allow read: if isOwner(uid) || isStaff();
      allow create: if isOwner(uid) || isAdmin();
      allow update: if isOwner(uid) || isAdmin();
      allow delete: if isAdmin();
    }

    // Settings
    match /settings/{doc} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Bookings
    match /bookings/{id} {
      allow read: if isAdmin() || isStaff() || (isSignedIn() && resource.data.userId == request.auth.uid);
      allow create: if isSignedIn();
      allow update, delete: if isAdmin() || isStaff() ||
         (isSignedIn() && resource.data.userId == request.auth.uid &&
          resource.data.startTime > request.time + duration.value(24, 'hours'));
    }

    // Blog posts
    match /blogPosts/{id} {
      allow read: if resource.data.status == "published";
      allow write: if isAdmin() || role() == "manager";
    }

    // Audit Logs
    match /auditLogs/{id} {
      allow read, write: if isAdmin();
    }
  }
}